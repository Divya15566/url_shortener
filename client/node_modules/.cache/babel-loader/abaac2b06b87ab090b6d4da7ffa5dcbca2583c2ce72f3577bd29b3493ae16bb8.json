{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jwtDecode } from 'jwt-decode'; // New syntax (v3.x+)\n\n// Updated API_BASE_URL to point to the local backend\nconst API_BASE_URL = 'http://localhost:5000';\n\n// Helper function to validate token\nconst isValidToken = token => {\n  if (!token) return false;\n  try {\n    const decoded = jwtDecode(token);\n    return decoded.exp > Date.now() / 1000;\n  } catch {\n    return false;\n  }\n};\n\n// Async thunk for login\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n      email,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      withCredentials: true,\n      timeout: 10000\n    });\n    const {\n      token,\n      user\n    } = response.data;\n\n    // Store token securely\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    // Set default auth header\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    return {\n      token,\n      user\n    };\n  } catch (err) {\n    let errorMessage = 'Login failed';\n    if (err.response) {\n      var _err$response$data, _err$response$data2;\n      errorMessage = ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : _err$response$data2.error) || err.response.statusText;\n\n      // Handle specific status codes\n      if (err.response.status === 401) {\n        errorMessage = 'Invalid email or password';\n      } else if (err.response.status === 429) {\n        errorMessage = 'Too many attempts. Please try again later.';\n      }\n    } else if (err.request) {\n      errorMessage = 'Network error. Please check your connection.';\n    }\n    toast.error(errorMessage);\n    return rejectWithValue({\n      error: errorMessage\n    });\n  }\n});\n\n// Async thunk for token refresh\nexport const refreshToken = createAsyncThunk('auth/refreshToken', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/auth/refresh`, {}, {\n      withCredentials: true\n    });\n    const {\n      token\n    } = response.data;\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    return {\n      token\n    };\n  } catch (err) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return rejectWithValue({\n      error: 'Session expired. Please login again.'\n    });\n  }\n});\n\n// Async thunk for logout\nexport const logout = createAsyncThunk('auth/logout', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    await axios.post(`${API_BASE_URL}/api/auth/logout`, {}, {\n      withCredentials: true\n    });\n  } catch (err) {\n    console.error('Logout error:', err);\n    return rejectWithValue({\n      error: 'Logout failed'\n    });\n  } finally {\n    // Clear client-side storage regardless of server response\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n});\n\n// Initial state with persisted auth\nconst initialState = {\n  token: localStorage.getItem('token'),\n  user: JSON.parse(localStorage.getItem('user')),\n  isLoading: false,\n  error: null,\n  isAuthenticated: isValidToken(localStorage.getItem('token'))\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    // Synchronous logout action\n    clearAuth: state => {\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login cases\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      state.isAuthenticated = true;\n    }).addCase(login.rejected, (state, action) => {\n      var _action$payload;\n      state.isLoading = false;\n      state.error = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.error;\n      state.isAuthenticated = false;\n    })\n\n    // Refresh token cases\n    .addCase(refreshToken.pending, state => {\n      state.isLoading = true;\n    }).addCase(refreshToken.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(refreshToken.rejected, state => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n    })\n\n    // Logout cases\n    .addCase(logout.pending, state => {\n      state.isLoading = true;\n    }).addCase(logout.fulfilled, state => {\n      state.isLoading = false;\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n    }).addCase(logout.rejected, (state, action) => {\n      var _action$payload2;\n      state.isLoading = false;\n      state.error = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.error;\n    });\n  }\n});\n\n// Export actions\nexport const {\n  clearAuth\n} = authSlice.actions;\n\n// Selectors\nexport const selectCurrentToken = state => state.auth.token;\nexport const selectCurrentUser = state => state.auth.user;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectAuthLoading = state => state.auth.isLoading;\nexport const selectAuthError = state => state.auth.error;\n\n// Reducer\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","toast","jwtDecode","API_BASE_URL","isValidToken","token","decoded","exp","Date","now","login","email","password","rejectWithValue","dispatch","response","post","headers","withCredentials","timeout","user","data","localStorage","setItem","JSON","stringify","defaults","common","err","errorMessage","_err$response$data","_err$response$data2","message","error","statusText","status","request","refreshToken","_","getState","removeItem","logout","console","initialState","getItem","parse","isLoading","isAuthenticated","authSlice","name","reducers","clearAuth","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_action$payload","_action$payload2","actions","selectCurrentToken","auth","selectCurrentUser","selectIsAuthenticated","selectAuthLoading","selectAuthError","reducer"],"sources":["C:/Users/divya/url-shortener/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { jwtDecode } from 'jwt-decode';  // New syntax (v3.x+)\r\n\r\n// Updated API_BASE_URL to point to the local backend\r\nconst API_BASE_URL = 'http://localhost:5000';\r\n\r\n// Helper function to validate token\r\nconst isValidToken = (token) => {\r\n  if (!token) return false;\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    return decoded.exp > Date.now() / 1000;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Async thunk for login\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async ({ email, password }, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE_URL}/api/auth/login`,\r\n        { email, password },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n          },\r\n          withCredentials: true,\r\n          timeout: 10000\r\n        }\r\n      );\r\n\r\n      const { token, user } = response.data;\r\n      \r\n      // Store token securely\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set default auth header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      return { token, user };\r\n      \r\n    } catch (err) {\r\n      let errorMessage = 'Login failed';\r\n      \r\n      if (err.response) {\r\n        errorMessage = err.response.data?.message || \r\n                      err.response.data?.error || \r\n                      err.response.statusText;\r\n        \r\n        // Handle specific status codes\r\n        if (err.response.status === 401) {\r\n          errorMessage = 'Invalid email or password';\r\n        } else if (err.response.status === 429) {\r\n          errorMessage = 'Too many attempts. Please try again later.';\r\n        }\r\n      } else if (err.request) {\r\n        errorMessage = 'Network error. Please check your connection.';\r\n      }\r\n      \r\n      toast.error(errorMessage);\r\n      return rejectWithValue({ error: errorMessage });\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk for token refresh\r\nexport const refreshToken = createAsyncThunk(\r\n  'auth/refreshToken',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE_URL}/api/auth/refresh`,\r\n        {},\r\n        { withCredentials: true }\r\n      );\r\n      \r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      return { token };\r\n      \r\n    } catch (err) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      return rejectWithValue({ error: 'Session expired. Please login again.' });\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk for logout\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post(\r\n        `${API_BASE_URL}/api/auth/logout`,\r\n        {},\r\n        { withCredentials: true }\r\n      );\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      return rejectWithValue({ error: 'Logout failed' });\r\n    } finally {\r\n      // Clear client-side storage regardless of server response\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }\r\n);\r\n\r\n// Initial state with persisted auth\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  user: JSON.parse(localStorage.getItem('user')),\r\n  isLoading: false,\r\n  error: null,\r\n  isAuthenticated: isValidToken(localStorage.getItem('token'))\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    // Synchronous logout action\r\n    clearAuth: (state) => {\r\n      state.token = null;\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login cases\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.token = action.payload.token;\r\n        state.user = action.payload.user;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload?.error;\r\n        state.isAuthenticated = false;\r\n      })\r\n      \r\n      // Refresh token cases\r\n      .addCase(refreshToken.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(refreshToken.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.token = action.payload.token;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(refreshToken.rejected, (state) => {\r\n        state.isLoading = false;\r\n        state.isAuthenticated = false;\r\n      })\r\n      \r\n      // Logout cases\r\n      .addCase(logout.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        state.token = null;\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      .addCase(logout.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload?.error;\r\n      });\r\n  }\r\n});\r\n\r\n// Export actions\r\nexport const { clearAuth } = authSlice.actions;\r\n\r\n// Selectors\r\nexport const selectCurrentToken = (state) => state.auth.token;\r\nexport const selectCurrentUser = (state) => state.auth.user;\r\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nexport const selectAuthLoading = (state) => state.auth.isLoading;\r\nexport const selectAuthError = (state) => state.auth.error;\r\n\r\n// Reducer\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}