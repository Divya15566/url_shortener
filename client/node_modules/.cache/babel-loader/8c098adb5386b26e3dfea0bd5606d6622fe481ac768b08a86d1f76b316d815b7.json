{"ast":null,"code":"// features/auth/authSlice.js\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios'; // or use fetch\nimport api from '../../api/axios';\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('/api/login', credentials, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (err) {\n    // Handle different error responses\n    if (err.response) {\n      return rejectWithValue(err.response.data.message || 'Login failed');\n    }\n    return rejectWithValue('Network error');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","api","login","credentials","rejectWithValue","response","post","headers","data","err","message","authSlice","name","initialState","user","token","isLoading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/divya/url-shortener/client/src/features/auth/authSlice.js"],"sourcesContent":["// features/auth/authSlice.js\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios'; // or use fetch\r\nimport api from '../../api/axios';\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        '/api/login',\r\n        credentials,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (err) {\r\n      // Handle different error responses\r\n      if (err.response) {\r\n        return rejectWithValue(err.response.data.message || 'Login failed');\r\n      }\r\n      return rejectWithValue('Network error');\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    token: null,\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,OAAO,MAAMC,KAAK,GAAGJ,gBAAgB,CACnC,YAAY,EACZ,OAAOK,WAAW,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,YAAY,EACZH,WAAW,EACX;MACEI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;IACA,IAAIA,GAAG,CAACJ,QAAQ,EAAE;MAChB,OAAOD,eAAe,CAACK,GAAG,CAACJ,QAAQ,CAACG,IAAI,CAACE,OAAO,IAAI,cAAc,CAAC;IACrE;IACA,OAAON,eAAe,CAAC,eAAe,CAAC;EACzC;AACF,CACF,CAAC;AAED,MAAMO,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,KAAK,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDI,OAAO,CAACnB,KAAK,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACT,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;IACpC,CAAC,CAAC,CACDM,OAAO,CAACnB,KAAK,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAef,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}